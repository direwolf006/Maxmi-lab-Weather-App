{"version":3,"sources":["OpenWeatherApi/fetchWeatherApi.js","images/thunderstorm.jpg","images/drizzle.jpg","images/rainy.jpg","images/snowfall.jpg","images/mist.jpg","images/smoke.jpg","images/haze.png","images/dust.jpg","images/fog.jpg","images/ash.jpg","images/tornado.jpg","images/cloudy.jpg","images/broken_clouds.jpg","images/clear_sky.jpg","Components/fetchImage.js","Components/WeatherCard.js","Pages/CityWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","catch","error","response","status","data","fetchImage","id","thunderstorm","drizzle","rainy","snowfall","mist","smoke","haze","dust","fog","ash","tornado","broken_clouds","cloudy","clear_sky","useStyles","makeStyles","theme","root","minWidth","minHeight","maxWidth","backgroundColor","color","media","breakpoints","down","height","width","up","WeatherCard","showError","classes","React","useState","name","temperature","weather","cityData","setCityData","editMode","setEditMode","cityEntered","setCityEntered","setCityWeatherData","console","log","Math","round","main","temp","toString","description","Card","className","style","display","justifyContent","margin","TextField","label","variant","textField","InputLabelProps","onChange","event","target","value","IconButton","aria-label","onClick","Typography","gutterBottom","marginTop","backgroundImage","flexGrow","control","padding","spacing","CityWeather","snackBarState","setSnackBarState","undefined","transition","Grid","container","position","marginLeft","marginRight","paddingTop","direction","justify","alignItems","item","sm","md","lg","xl","map","city","Snackbar","open","autoHideDuration","TransitionComponent","message","onClose","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6702642b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'd90564d2580f6e6e38e03f5ba778942e';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const {data}  = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    }).catch((error)=>{return error.response.status});\r\n\r\n    return data||404;\r\n}","export default __webpack_public_path__ + \"static/media/thunderstorm.0e4acb08.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle.7c99309e.jpg\";","export default __webpack_public_path__ + \"static/media/rainy.3c0cedd2.jpg\";","export default __webpack_public_path__ + \"static/media/snowfall.ff7725ba.jpg\";","export default __webpack_public_path__ + \"static/media/mist.90b74a59.jpg\";","export default __webpack_public_path__ + \"static/media/smoke.965f51dc.jpg\";","export default __webpack_public_path__ + \"static/media/haze.e182d3a2.png\";","export default __webpack_public_path__ + \"static/media/dust.8399c0cb.jpg\";","export default __webpack_public_path__ + \"static/media/fog.516ac1d5.jpg\";","export default __webpack_public_path__ + \"static/media/ash.dadcaf60.jpg\";","export default __webpack_public_path__ + \"static/media/tornado.14068b01.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy.25030380.jpg\";","export default __webpack_public_path__ + \"static/media/broken_clouds.14092c51.jpg\";","export default __webpack_public_path__ + \"static/media/clear_sky.83b2f04e.jpg\";","import  thunderstorm from '../images/thunderstorm.jpg';\r\nimport  drizzle from '../images/drizzle.jpg';\r\nimport  rainy from '../images/rainy.jpg';\r\nimport  snowfall from '../images/snowfall.jpg';\r\nimport  mist from '../images/mist.jpg';\r\nimport  smoke from '../images/smoke.jpg';\r\nimport  haze from '../images/haze.png';\r\nimport  dust from '../images/dust.jpg';\r\nimport  fog from '../images/fog.jpg';\r\nimport  ash from '../images/ash.jpg';\r\nimport  tornado from '../images/tornado.jpg';\r\nimport  cloudy from '../images/cloudy.jpg';\r\nimport  broken_clouds from '../images/broken_clouds.jpg';\r\nimport clear_sky from '../images/clear_sky.jpg';\r\n\r\n\r\nconst fetchImage=(id)=>{\r\n    if(id>=200 && id<=232 ){\r\n        return thunderstorm;\r\n    }else if(id>=300 && id<=321){\r\n        return drizzle;\r\n    }else if(id>=500 && id<=531){\r\n        return rainy;\r\n    }else if(id>=600 && id<=622){\r\n        return snowfall;\r\n    }else if(id>=700 && id<=781){\r\n        if(id==701){\r\n            return mist;\r\n        }else if(id==711){\r\n            return smoke;\r\n        }else if(id==721){\r\n            return haze;\r\n        }else if(id==731|| id ==761){\r\n            return dust;\r\n        }else if(id==741){\r\n            return fog;\r\n        }else if(id==762){\r\n            return ash;\r\n        }else if(id==781){\r\n            return tornado;\r\n        }\r\n    }else if(id>=801 && id<=804){\r\n        if(id==803){\r\n            return broken_clouds;\r\n        }\r\n        return cloudy;\r\n    }\r\n    return clear_sky;\r\n}\r\nexport default fetchImage;","import React from 'react';\r\nimport { ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { grey  } from '@material-ui/core/colors';\r\nimport { fetchWeather } from '../OpenWeatherApi/fetchWeatherApi';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport fetchImage from './fetchImage';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth:350,\r\n      minHeight:250,\r\n      maxWidth: 1000,\r\n      backgroundColor:'#00695c',\r\n      color:'#FFFFFF'\r\n    },\r\n    media: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            height:150,\r\n            width: \"100%\",\r\n          },\r\n          [theme.breakpoints.up('sm')]: {\r\n            height:150,\r\n            width: \"100%\",\r\n          },\r\n          [theme.breakpoints.up('md')]: {\r\n            width: \"100%\",\r\n            height:150,\r\n          },\r\n          [theme.breakpoints.up('lg')]: {\r\n            height:200,\r\n            width: \"100%\",\r\n          },\r\n          marginBottom:\"1%\"\r\n    },\r\n  }));\r\n\r\nconst WeatherCard=({showError})=>{\r\n    const classes = useStyles();\r\n    const [cityData,setCityData]=React.useState({\r\n        id:0,\r\n        name:\"Search City\",\r\n        temperature:\"_ _ °C\",\r\n        weather:\"Hope its clear :-)\",\r\n    })\r\n    const [editMode,setEditMode]=React.useState(false);\r\n    const [cityEntered, setCityEntered] = React.useState(2);\r\n    const setCityWeatherData=async()=>{\r\n        const data = await fetchWeather(cityEntered);\r\n        console.log(data);\r\n        if(data!=404){\r\n            setCityData({\r\n                id:data.weather[0].id,\r\n                name:data.name,\r\n                temperature:Math.round(data.main.temp).toString()+\" °C\",\r\n                weather:data.weather[0].description\r\n            })\r\n        }else{\r\n            showError();\r\n        }\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className={classes.root} >\r\n        {(editMode)?\r\n            (<div style={{display:'flex',justifyContent:\"space-between\",margin:\"3% 5%\"}}>\r\n                <TextField  label=\"Enter City\" variant=\"outlined\" className={classes.textField}\r\n                    InputLabelProps={{color:\"#FFFFFF\"}}\r\n                    onChange={(event)=>{setCityEntered(event.target.value)}} />\r\n                <IconButton aria-label=\"delete\"  onClick={()=>setCityWeatherData()} >\r\n                            <SearchIcon style={{color:'#FFFFFF'}}/>\r\n                </IconButton>\r\n            </div>)\r\n            :(<div style={{display:'flex',justifyContent:\"space-between\",margin:\"3% 5%\"}}>\r\n                <Typography variant=\"h5\" gutterBottom style={{marginTop:\"3%\"}}>\r\n                    {cityData.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"delete\"  onClick={()=>{setEditMode(!editMode)}} >\r\n                        <EditIcon style={{color:'#FFFFFF'}}/>\r\n                </IconButton>\r\n                </div>)\r\n            }\r\n\r\n        <div style={{backgroundImage:`url(${fetchImage(cityData.id)})`}} className={classes.media} />\r\n\r\n        <Typography variant=\"h5\" gutterBottom>\r\n            {cityData.temperature}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n            {cityData.weather}\r\n        </Typography>\r\n      </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherCard;","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WeatherCard from '../Components/WeatherCard';\r\nimport { FormLabel,FormControlLabel,FormGroup,Checkbox,FormControl, Card, CardContent,\r\n  InputLabel,CardActions,Select, Button, Typography, Menu, MenuItem ,TextField,Avatar,\r\n  FormHelperText,InputAdornment,CircularProgress ,Modal,CardHeader,Slide,Snackbar} from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CityWeather=()=>{\r\n  const [cityEntered, setCityEntered] = useState(2);\r\n  const classes = useStyles();\r\n  const [snackBarState,setSnackBarState]=React.useState(false)\r\n  const [transition, setTransition] = React.useState(undefined);\r\n  const TransitionUp= React.forwardRef((props, ref) => {\r\n    return <Slide {...props} ref={ref} direction=\"up\" />;\r\n  })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{position:'relative',marginLeft:-1,marginRight:-1,paddingTop:50}} direction='row'\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n    spacing={2}\r\n    item={true}\r\n    sm={12} md={12} lg={12} xl={12}>\r\n\r\n          {[1,2,3,4,5,6,7,8,9].map((city) => (\r\n              <Grid item key={city}>\r\n                  <WeatherCard \r\n                    key={city}\r\n                    showError={()=>setSnackBarState(true)}\r\n                    />\r\n            </Grid>\r\n          ))}\r\n          \r\n    </Grid>\r\n      <Snackbar\r\n                    open={snackBarState}\r\n                    autoHideDuration={2000}\r\n                    TransitionComponent={transition}\r\n                    message={\"Invalid City entered\"}\r\n                    onClose={()=>setSnackBarState(false)}\r\n                    key={transition ? transition.name : ''}\r\n                />\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default CityWeather;\r\n","import './App.css';\nimport CityWeather from './Pages/CityWeather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CityWeather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}